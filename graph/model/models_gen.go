// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type Comment struct {
	CommentID           int       `json:"commentID"`
	ResponseToCommentID int       `json:"responseToCommentID"`
	PostID              int       `json:"postID"`
	UserID              int       `json:"userID"`
	User                *User     `json:"user"`
	CommentText         string    `json:"comment_text"`
	DatePosted          time.Time `json:"date_posted"`
	Votes               *Votes    `json:"votes"`
}

type CommentVote struct {
	CommentID int `json:"commentID"`
	VoteValue int `json:"voteValue"`
	UserID    int `json:"userID"`
}

type Post struct {
	PostID     int       `json:"postID"`
	User       *User     `json:"user"`
	Title      string    `json:"title"`
	SubTitle   *string   `json:"subTitle"`
	PostText   string    `json:"post_text"`
	DatePosted time.Time `json:"date_posted"`
	Votes      *Votes    `json:"votes"`
}

type PostInput struct {
	Title    string  `json:"title"`
	SubTitle *string `json:"subTitle"`
	Text     string  `json:"text"`
}

type PostVote struct {
	PostID    int `json:"postID"`
	VoteValue int `json:"voteValue"`
	UserID    int `json:"userID"`
}

type User struct {
	UserID     int       `json:"userID"`
	Username   string    `json:"username"`
	Email      string    `json:"email"`
	Posts      []*Post   `json:"posts"`
	DateJoined time.Time `json:"date_joined"`
}

type UserInput struct {
	Username string `json:"username"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

type Votes struct {
	Upvote   int `json:"upvote"`
	Downvote int `json:"downvote"`
}
